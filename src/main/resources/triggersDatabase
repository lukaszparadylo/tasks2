CREATE TABLE READERS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           READER_ID INT(11) NOT NULL,
                           OLD_READER_ID INT(11),
                           NEW_READER_ID INT(11),
                           FIRSTNAME VARCHAR(20) DEFAULT '-',
                           OLD_FIRSTNAME VARCHAR(20),
                           NEW_FIRSTNAME VARCHAR(20),
                           PESELID INT(14),
                           OLD_PESELID INT(14),
                           NEW_PESELID INT(14),
                           VIP_LEVEL BOOLEAN,
                           OLD_VIP_LEVEL BOOLEAN,
                           NEW_VIP_LEVEL BOOLEAN,
                           PRIMARY KEY (EVENT_ID)
);
ALTER TABLE READERS_AUD MODIFY NEW_VIP_LEVEL VARCHAR(20);
ALTER TABLE READERS_AUD MODIFY OLD_VIP_LEVEL VARCHAR(20);
ALTER TABLE READERS_AUD MODIFY VIP_LEVEL VARCHAR(20);
ALTER TABLE READERS_AUD MODIFY NEW_PESELID VARCHAR(11);
ALTER TABLE READERS_AUD MODIFY OLD_PESELID VARCHAR(11);
ALTER TABLE READERS_AUD MODIFY PESELID VARCHAR(11);

ALTER TABLE READERS_AUD ADD LASTNAME VARCHAR(20);
ALTER TABLE READERS_AUD ADD OLD_LASTNAME VARCHAR(20);
ALTER TABLE READERS_AUD ADD NEW_LASTNAME VARCHAR(20);

DELIMITER $$
CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS                                        -- [1]
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID,NEW_FIRSTNAME,NEW_LASTNAME,NEW_PESELID,NEW_VIP_LEVEL)
        VALUE(CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME,NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);                                                          -- [5]
END $$
DELIMITER ;

INSERT INTO READERS (READER_ID, FIRSTNAME,LASTNAME, PESELID, VIP_LEVEL)
VALUES (11, 'jozek', 'motyka', 12345678, true);
COMMIT;

DELIMITER $$
CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS          -- [1]
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
        VALUE(CURTIME(), 'DELETE', OLD.READER_ID);
END $$
DELIMITER ;

DELETE FROM READERS WHERE READER_ID = 11;
COMMIT;

DELIMITER $$
CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID,NEW_FIRSTNAME,NEW_LASTNAME,NEW_PESELID,
                             NEW_VIP_LEVEL,OLD_FIRSTNAME,OLD_LASTNAME,OLD_PESELID,OLD_VIP_LEVEL)
        VALUE(CURTIME(), 'UPDATE', OLD.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME,
              NEW.PESELID, NEW.VIP_LEVEL, OLD.FIRSTNAME, OLD.LASTNAME,
              OLD.PESELID, OLD.VIP_LEVEL);
END $$
DELIMITER ;

UPDATE READERS SET VIP_LEVEL = 'bad customer'
WHERE READER_ID = 1;
COMMIT ;

CREATE TABLE BOOKS_AUD (
                             EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                             EVENT_DATE DATETIME NOT NULL,
                             EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                             BOOK_ID INT(11) NOT NULL,
                             OLD_BOOK_ID INT(11),
                             NEW_BOOK_ID INT(11),
                             TITLE VARCHAR(50) DEFAULT '-',
                             OLD_TITLE VARCHAR(50),
                             NEW_TITLE VARCHAR(50),
                             PUBYEAR INT(4),
                             OLD_PUBYEAR INT(4),
                             NEW_PUBYEAR INT(4),
                             BESTSELLER BOOLEAN,
                             OLD_BESTSELLER BOOLEAN,
                             NEW_BESTSELLER BOOLEAN,
                             PRIMARY KEY (EVENT_ID)
);

DELIMITER $$
CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS                                        -- [1]
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID,NEW_TITLE,NEW_PUBYEAR,NEW_BESTSELLER)
        VALUE(CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE,NEW.PUBYEAR, NEW.BESTSELLER);                                                          -- [5]
END $$
DELIMITER ;

INSERT INTO BOOKS (BOOK_ID, TITLE, PUBYEAR, BESTSELLER)
VALUES (11, 'BOOK 1', 2000, true);
COMMIT;

DELIMITER $$
CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS          -- [1]
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
        VALUE(CURTIME(), 'DELETE', OLD.BOOK_ID);
END $$
DELIMITER ;

DELETE FROM BOOKS WHERE BOOK_ID = 11;
COMMIT;

DELIMITER $$
CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID,NEW_TITLE,NEW_PUBYEAR,NEW_BESTSELLER,
                             OLD_TITLE,OLD_PUBYEAR,OLD_BESTSELLER)
        VALUE(CURTIME(), 'UPDATE', OLD.BOOK_ID, NEW.TITLE, NEW.PUBYEAR,
              NEW.BESTSELLER, OLD.TITLE, OLD.PUBYEAR,
              OLD.BESTSELLER);
END $$
DELIMITER ;

UPDATE BOOKS SET BESTSELLER = false
WHERE BOOK_ID = 1;
COMMIT ;